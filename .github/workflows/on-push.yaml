name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger only when PR is merged to main

jobs:
  pre-commit:
    name: Run Pre-Commit Hooks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: |
          pip install poetry
          poetry --version

      - name: Install Dependencies
        run: poetry install --no-root

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.9.4"

      - name: Terraform Init
        run: terraform init
        working-directory: terraform/

      - name: Run Pre-Commit Hooks
        run: poetry run pre-commit run --all-files

  lint-test:
    name: Lint & Test
    runs-on: ubuntu-latest
    needs: pre-commit  # Ensure pre-commit runs first

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: |
          pip install poetry
          poetry --version

      - name: Install Dependencies
        run: poetry install --no-root

      - name: Run Ruff Linting
        run: poetry run ruff check .

      - name: Run Pytest
        run: poetry run pytest --cov=src tests/

  terraform:
    name: Apply Terraform
    runs-on: ubuntu-latest
    needs: lint-test  # Ensure tests pass first

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.9.4"

      - name: Terraform Init
        run: terraform init
        working-directory: infra/

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: infra/

  docker-deploy:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: terraform  # Ensure Terraform applies before deploying container

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsRole

      - name: Make Script Executable
        run: chmod +x scripts/deploy_to_ecr.sh

      - name: Run Deployment Script
        run: ./scripts/deploy_to_ecr.sh
